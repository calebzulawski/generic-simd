name: Build

on: [push]

jobs:
  test:
    strategy:
      matrix:
        version:
          - 1.42.0
          - stable
          - beta
          - nightly
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        features:
          - []
          - [alloc]
          - [complex]
          - [std]
          - [std, alloc]
          - [std, complex]

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v1
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.version }}
        override: true
        profile: minimal
    - name: Run tests
      shell: bash
      run: |
        FEATURES_FLAG=$(echo '${{ toJson(matrix.features) }}' | jq -r 'map("--features \(.)") | join(" ")')
        cargo test --verbose --no-default-features $FEATURES_FLAG --manifest-path generic-simd/Cargo.toml
        cargo test --verbose --no-default-features $FEATURES_FLAG --manifest-path generic-simd-test/Cargo.toml

  wasm:
    strategy:
      matrix:
        rustflags:
        - "-Ctarget-feature=-simd128"
        - "-Ctarget-feature=+simd128"
        features:
        - --no-default-features
        - --no-default-features --features complex
        - --no-default-features --features nightly
        - --no-default-features --features nightly --features complex

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    - name: Install nightly rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        profile: minimal
    - name: Run tests
      env:
        RUSTFLAGS: ${{ matrix.rustflags }}
      run: wasm-pack test --chrome --headless generic-simd-test -- ${{ matrix.features }}


  cross:
    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-gnu
        - arm-unknown-linux-gnueabihf
        features:
        - --no-default-features
        - --no-default-features --features complex
        - --no-default-features --features nightly
        - --no-default-features --features nightly --features complex

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install cross
      run: cargo install cross
    - name: Run tests
      shell: bash
      run: |
        cross +nightly test --target ${{ matrix.target }} --verbose ${{ matrix.features }} --manifest-path generic-simd/Cargo.toml
        cross +nightly test --target ${{ matrix.target }} --verbose ${{ matrix.features }} --manifest-path generic-simd-test/Cargo.toml


  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: clippy, rustfmt
    - name: Clippy lint
      run: cargo clippy --all-targets ${{ matrix.features }} --manifest-path generic-simd/Cargo.toml -- -D warnings
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Deadlinks
      run: |
        cargo install cargo-deadlinks
        cargo doc
        cargo deadlinks -v --check-http
